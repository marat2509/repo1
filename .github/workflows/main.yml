name: Cherry-pick commits
on:
  workflow_dispatch:

jobs:
  cherry_pick:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: main
          fetch-depth: 0

      - name: Set up Git user info
        run: |
          git config --global user.name ${{github.actor}}
          git config --global user.email ${{github.actor}}@users.noreply.github.com

      - name: Fetch repository
        run: |
          echo "Fetching repository ${{ env.FETCH_REPO }} branch ${{ env.FETCH_BRANCH }}"
          git fetch https://github.com/mt6768-dev/android_device_xiaomi_lancelot lineage-20

      - name: Find last cherry-picked commit
        id: last_cherry_pick
        run: |
          fetch_commits=$(git log --pretty=format:"%H" FETCH_HEAD)
          # echo "FETCH_HEAD commits count: $(echo "$fetch_commits" | wc -l)"
          head_commits=$(git log --pretty=format:"%H" HEAD)
          
          while read -r commit; do
              if grep -q "$commit" <<< "$fetch_commits"; then
                  export LAST_CHERRY_PICKED_COMMIT="$commit"
                  echo "$commit"
                  break
              fi
          done <<< "$head_commits"
          echo "Last cherry-picked commit: $LAST_CHERRY_PICKED_COMMIT"
          echo "LAST_CHERRY_PICKED_COMMIT=$LAST_CHERRY_PICKED_COMMIT" >> $GITHUB_ENV

      - name: Get missing commits
        id: missing_commits
        run: |
          echo "Getting missing commits"
          MISSING_COMMITS=$(git log --pretty=format:"%H" $LAST_CHERRY_PICKED_COMMIT..FETCH_HEAD)
          echo "Missing commits: $MISSING_COMMITS"
          
          echo "MISSING_COMMITS<<EOF" >> $GITHUB_ENV
          echo $MISSING_COMMITS >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Cherry-pick missing commits
        run: |
          echo "Cherry-picking missing commits"
          for commit in $MISSING_COMMITS; do
            if ! git cherry-pick $commit; then
              echo "Conflict with commit $commit"
              git cherry-pick --skip
            fi
          done

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          delete-branch: true